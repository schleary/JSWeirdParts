Execution Context: Creation and Hoisting

Execution Context is Created in Two Phases:
1) Creation Phase
 - Global Obj in memory
 - 'this' in memory
 - Outer environment
 - Setup Memory Space for Variables & Functions (HOISTING)

 Hoisting:
  Before your code begins to be executed line by line, the JS has already set aside memory code for all the variables and functions for the code you've created. So when it executed line by line, it can access them. 

  - Functions in entirety get placed in memory space

  - Valiarbles are set in memory, but do not have a valie set in memory yet. Will have a placeholder called undefined (as if not set yet).

  
All variables are initially set to undefined

Hoisting is tricky to use. You may not get the value you were expecting.



BEST to actually set variables on top to avoid that trap:

var a = 'Hello World!';

function b() {
    console.log('called b!');
}

b();
console.log(a);

